<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="2.0"
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:osis="http://www.bibletechnologies.net/2003/OSIS/namespace">
 
  <xsl:param name="KeepGlossaryDuplicates" select="'no'"/>

  <!-- Transforms OSIS files created by usfm2osis.py for use in making SWORD modules !-->
  
  <xsl:template match="node()|@*" name="identity">
    <xsl:copy>
       <xsl:apply-templates select="node()|@*"/>
    </xsl:copy>
  </xsl:template>
  
  <!-- use two passes !-->
  <xsl:template match="/">
    <xsl:variable name="Pass1">
      <xsl:apply-templates/>
    </xsl:variable>

    <xsl:apply-templates mode="Pass2" select="$Pass1"/>
  </xsl:template>

  <!-- remove runningHead titles which should only appear on print-like editions !-->
  <xsl:template match="osis:title[@type='runningHead']"/>
  
  <!-- remove USFM chapter labels, which appear as introductions in SWORD, and are auto-generated by front-ends !-->
  <xsl:template match="osis:title[@type='x-chapterLabel']"/>

  <!-- remove annotateRefs, which are auto-generated by SWORD front-ends, to prevent duplication !-->
  <xsl:template match="osis:reference[@type='annotateRef']" priority="2"/>
  
  <!-- remove introduction elements that shouldn't appear in SWORD introductions !-->
  <xsl:template match="osis:milestone[@type='x-usfm-toc1']"/>
  <xsl:template match="osis:milestone[@type='x-usfm-toc2']"/>
  <xsl:template match="osis:milestone[@type='x-usfm-toc3']"/>
  
  <xsl:template match="osis:lb[@type='x-optional']"/>
  
  <!-- remove comments !-->
  <xsl:template match="comment()" priority="1"/>

  <!-- show introduction <head> tags as secondary titles !-->
  <xsl:template match="osis:head">
    <title level="2" type="main" subType="x-introduction"><xsl:apply-templates/></title>
  </xsl:template>
  
  <!-- make parallel passage titles secondary titles !-->
  <xsl:template match="osis:title[@type='parallel']">
    <xsl:copy><xsl:attribute name="level">2</xsl:attribute><xsl:apply-templates/></xsl:copy>
  </xsl:template>

  <!-- scope title references should not appear as reference links !-->
  <xsl:template match="osis:title[@type='scope']//osis:reference">
    <xsl:apply-templates/>
  </xsl:template>
  
  <!-- remove <reference> tags that lack osisRef attributes !-->
  <xsl:template match="osis:reference[not(@osisRef)]" priority="1">
    <xsl:apply-templates/>
  </xsl:template>
  
  <!-- OSIS <list> and <item> are not milestonable and thus cause SWORD import warnings 
  and improper rendering by SWORD front-ends any time a list contains multiple verses 
  (which is usually the case). The only way to render these is to replace them with 
  milestonable elements, so <lg> and <l> are the natural replacements !-->
  <xsl:template match="osis:list[.//osis:verse]">
    <xsl:element name="lg" namespace="http://www.bibletechnologies.net/2003/OSIS/namespace">
      <xsl:attribute name="subType">x-list</xsl:attribute>
      <xsl:apply-templates select="node()|@*"/>
    </xsl:element>
  </xsl:template>
  <xsl:template match="osis:list[.//osis:verse]//osis:item">
    <xsl:element name="l" namespace="http://www.bibletechnologies.net/2003/OSIS/namespace">
      <xsl:attribute name="subType">x-item</xsl:attribute>
      <xsl:apply-templates select="node()|@*"/>
    </xsl:element>
  </xsl:template>
    
  <!-- For the moment osis2mod.cpp is by default interpereting majorTitles as introductory material, so  this 
  forces osis2mod.cpp to import majorSection titles as regular preverse titles, which is the more common need !-->
  <xsl:template match="osis:div[@type='majorSection']/osis:title[not(@type)][1]">
    <xsl:copy><xsl:attribute name="type">majorSection</xsl:attribute><xsl:apply-templates/></xsl:copy>
  </xsl:template>

  <!-- usfm2osis.py follows the OSIS manual recommendation for selah as a line element which differs from the USFM recommendation for selah.
  According to USFM 2.35 spec, selah is: "A character style. This text is frequently right aligned, and rendered on the same line as the previous poetic text..." !-->
  <xsl:template match="osis:l">
    <xsl:choose>
      <xsl:when test="@type = 'selah'"/>
      <xsl:when test="following-sibling::osis:l[1]/@type = 'selah'">
        <xsl:copy>
          <xsl:apply-templates select="node()|@*"/>
          <xsl:element name="hi" namespace="http://www.bibletechnologies.net/2003/OSIS/namespace">
            <xsl:attribute name="type">italic</xsl:attribute>
            <xsl:attribute name="subType">x-selah</xsl:attribute>
            <xsl:text> </xsl:text>
            <xsl:value-of select="following-sibling::osis:l[1]"/>
            <xsl:text> </xsl:text>
            <xsl:value-of select="following-sibling::osis:l[2][@type = 'selah']"/>
          </xsl:element>
        </xsl:copy>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="identity"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  
  <xsl:template match="*[@subType='x-glossary-duplicate']">
    <xsl:if test="$KeepGlossaryDuplicates != 'no'"><xsl:apply-templates select="."/></xsl:if>
  </xsl:template>
  
  <!-- A second pass is needed to handle all <l> tags, including 
  those converted from <item> during the first pass !-->
  <xsl:template match="node()|@*" mode="Pass2">
    <xsl:copy>
       <xsl:apply-templates mode="Pass2" select="node()|@*"/>
    </xsl:copy>
  </xsl:template>
  
  <!-- Due to the way <l> may be rendered by front-ends, <l> elements must not contain <verse> tags 
  otherwise these would be broken into multiple lines. The fix is to remove all verse tags within 
  <l> elements, and make the previous/following verse tags span the entire element. !-->
  <xsl:template match="osis:verse[parent::osis:l]" mode="Pass2" priority="2"/>
  <!-- Modify attribs of each verse that starts outside <l> but the following verse starts within <l> !-->
  <xsl:template match="osis:verse[@sID][not(parent::osis:l)][following::osis:verse[@sID][1][parent::osis:l]]" mode="Pass2">
    <xsl:variable name="groupend" select="./following::osis:verse[@sID][not(parent::osis:l)][1]" />
    <xsl:copy>
      <xsl:attribute name="osisID">
        <xsl:value-of select="string-join((./@osisID, ./following::osis:verse[@sID][. &lt;&lt; $groupend]/@osisID), ' ')"/>
      </xsl:attribute>
      <xsl:attribute name="sID">
        <xsl:value-of select="string-join((./@sID, ./following::osis:verse[@sID][. &lt;&lt; $groupend]/@sID), ' ')"/>
      </xsl:attribute>
    </xsl:copy>
  </xsl:template>
  <!-- Modify attribs of each verse that ends outside <l> but the preceding verse ends within <l> !-->
  <xsl:template match="osis:verse[@eID][not(parent::osis:l)][preceding::osis:verse[@eID][1][parent::osis:l]]" mode="Pass2">
    <xsl:variable name="groupend" select="./preceding::osis:verse[@eID][not(parent::osis:l)][1]" />
    <xsl:copy>
      <xsl:attribute name="eID">
        <xsl:value-of select="string-join((./preceding::osis:verse[@eID][$groupend &lt;&lt; .]/@eID, ./@eID), ' ')"/>
      </xsl:attribute>
    </xsl:copy>
  </xsl:template>

</xsl:stylesheet>
